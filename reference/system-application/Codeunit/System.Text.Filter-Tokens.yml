### YamlMime:BusinessCentralApplicationObject
fqName: System.Text."Filter Tokens"
alId: ID 41
namespace: System.Text
baseKind: Codeunit
kind: Codeunit
parent: N:Module::System_Application::Namespace::System.Text
langs:
- al
seeAlso:
- '[Codeunit](https://learn.microsoft.com/dynamics365/business-central/dev-itpro/developer/devenv-codeunit-object)'
objectProperties:
- name: Access
  value: Public
  promoted: false
- name: SingleInstance
  value: "True"
  promoted: false
- name: InherentEntitlements
  value: X
  promoted: false
- name: InherentPermissions
  value: X
  promoted: false
methods:
- syntax:
    content: 'procedure MakeDateFilter(var DateFilterText: Text)'
    parameters:
    - id: DateFilterText
      parameterType:
        name: Text
        isExternal: true
  summary: >-
    Turns text that represents date formats into a valid date filter expression with respect to filter tokens and date formulas.

    Call this function from onValidate trigger of page field that should behave similar to system filters.

    <param name="DateFilterText">The text from which the date filter should be extracted passed as VAR. For example: "YESTERDAY", or " 01-01-2012 ".</param>
  name: MakeDateFilter
  uid: M:Codeunit::System#Text#Filter_Tokens.MakeDateFilter(Text@)
- syntax:
    content: 'procedure MakeTimeFilter(var TimeFilterText: Text)'
    parameters:
    - id: TimeFilterText
      description: 'The text from which the time filter should be extracted, passed as VAR. For example: "NOW".'
      parameterType:
        name: Text
        isExternal: true
  summary: >-
    Turns text that represents a time into a valid time filter with respect to filter tokens.

    Call this function from onValidate trigger of page field that should behave similar to system filters.
  name: MakeTimeFilter
  uid: M:Codeunit::System#Text#Filter_Tokens.MakeTimeFilter(Text@)
- syntax:
    content: 'procedure MakeTextFilter(var TextFilter: Text)'
    parameters:
    - id: TextFilter
      description: 'The expression from which the text filter should be extracted, passed as VAR. For example: "ME".'
      parameterType:
        name: Text
        isExternal: true
  summary: >-
    Turns text into a valid text filter with respect to filter tokens.

    Call this function from onValidate trigger of page field that should behave similar to system filters.
  name: MakeTextFilter
  uid: M:Codeunit::System#Text#Filter_Tokens.MakeTextFilter(Text@)
- syntax:
    content: 'procedure MakeDateTimeFilter(var DateTimeFilterText: Text)'
    parameters:
    - id: DateTimeFilterText
      description: 'The text from which the date and time should be extracted, passed as VAR. For example: "NOW" or "01-01-2012 11:11:11..NOW".'
      parameterType:
        name: Text
        isExternal: true
  summary: >-
    Turns text that represents a DateTime into a valid date and time filter with respect to filter tokens.

    Call this function from onValidate trigger of page field that should behave similar to system filters.
  name: MakeDateTimeFilter
  uid: M:Codeunit::System#Text#Filter_Tokens.MakeDateTimeFilter(Text@)
events:
- syntax:
    signatures:
    - '[IntegrationEvent(False,False)]'
    content: 'internal procedure OnResolveDateFilterToken(DateToken: Text, var FromDate: Date, var ToDate: Date, var Handled: Boolean)'
    parameters:
    - id: DateToken
      description: 'The date token to resolve, for example: "Summer".'
      parameterType:
        name: Text
        isExternal: true
    - id: FromDate
      description: 'The start date to resolve from DateToken that the filter will use, for example: "01/06/2019". Passed by reference by using VAR keywords.'
      parameterType:
        name: Date
        isExternal: true
    - id: ToDate
      description: 'The end date to resolve from DateToken that the filter will use, for example: "31/08/2019". Passed by reference by using VAR keywords.'
      parameterType:
        name: Date
        isExternal: true
    - id: Handled
      description: Stores whether the operation was successful.
      parameterType:
        name: Boolean
        isExternal: true
  summary: >-
    Use this event if you want to add support for additional tokens that user will be able to use when working with date filters, for example "Christmas" or "StoneAge".

    Ensure that in your subscriber you check that what user entered contains your keyword, then return proper date range for your filter token.
  name: OnResolveDateFilterToken
  uid: M:Codeunit::System#Text#Filter_Tokens.OnResolveDateFilterToken(Text,Date@,Date@,Boolean@)
- syntax:
    signatures:
    - '[IntegrationEvent(False,False)]'
    content: 'internal procedure OnResolveTextFilterToken(TextToken: Text, var TextFilter: Text, var Handled: Boolean)'
    parameters:
    - id: TextToken
      description: The text token to resolve.
      parameterType:
        name: Text
        isExternal: true
    - id: TextFilter
      description: The text to translate into a properly formatted text filter.
      parameterType:
        name: Text
        isExternal: true
    - id: Handled
      description: Stores whether the operation was successful.
      parameterType:
        name: Boolean
        isExternal: true
  summary: >-
    Use this event if you want to add support for additional filter tokens that user will be able to use when working with text or code filters, for example "MyFilter".

    Ensure that in your subscriber you check that what user entered contains your token, then return properly formatted text for your filter token.
  name: OnResolveTextFilterToken
  uid: M:Codeunit::System#Text#Filter_Tokens.OnResolveTextFilterToken(Text,Text@,Boolean@)
- syntax:
    signatures:
    - '[IntegrationEvent(False,False)]'
    content: 'internal procedure OnResolveTimeFilterToken(TimeToken: Text, var TimeFilter: Time, var Handled: Boolean)'
    parameters:
    - id: TimeToken
      description: 'The time token to resolve, for example: "Lunch".'
      parameterType:
        name: Text
        isExternal: true
    - id: TimeFilter
      description: 'The text to translate into a properly formatted time filter, for example: "12:00:00".'
      parameterType:
        name: Time
        isExternal: true
    - id: Handled
      description: Stores whether the operation was successful.
      parameterType:
        name: Boolean
        isExternal: true
  summary: >-
    Use this event if you want to add support for additional filter tokens that user will be able to use when working with time filters, for example "Lunch".

    Ensure that in your subscriber you check that what user entered contains your token, then return properly formatted time for your filter token.
  name: OnResolveTimeFilterToken
  uid: M:Codeunit::System#Text#Filter_Tokens.OnResolveTimeFilterToken(Text,Time@,Boolean@)
- syntax:
    signatures:
    - '[IntegrationEvent(False,False)]'
    content: 'internal procedure OnResolveDateTokenFromDateTimeFilter(DateToken: Text, var DateFilter: Date, var Handled: Boolean)'
    parameters:
    - id: DateToken
      description: 'The date token to resolve, for example: "Christmas".'
      parameterType:
        name: Text
        isExternal: true
    - id: DateFilter
      description: 'The text to translate into a properly formatted date filter, for example: "25/12/2019".'
      parameterType:
        name: Date
        isExternal: true
    - id: Handled
      description: Stores whether the operation was successful.
      parameterType:
        name: Boolean
        isExternal: true
  summary: >-
    Use this event if you want to add support for additional filter tokens that user will be able to use as date in DateTime filters.

    Parses and translates a date token into a date filter.
  name: OnResolveDateTokenFromDateTimeFilter
  uid: M:Codeunit::System#Text#Filter_Tokens.OnResolveDateTokenFromDateTimeFilter(Text,Date@,Boolean@)
- syntax:
    signatures:
    - '[IntegrationEvent(False,False)]'
    content: 'internal procedure OnResolveTimeTokenFromDateTimeFilter(TimeToken: Text, var TimeFilter: Time, var Handled: Boolean)'
    parameters:
    - id: TimeToken
      description: 'The time token to resolve, for example: "Lunch".'
      parameterType:
        name: Text
        isExternal: true
    - id: TimeFilter
      description: The text to translate into a properly formatted time filter, for example:"12:00:00".
      parameterType:
        name: Time
        isExternal: true
    - id: Handled
      description: Stores whether the operation was successful.
      parameterType:
        name: Boolean
        isExternal: true
  summary: >-
    Use this event if you want to add support for additional filter tokens that user will be able to use as time in DateTime filters.

    Parses and translates a time token into a time filter.
  name: OnResolveTimeTokenFromDateTimeFilter
  uid: M:Codeunit::System#Text#Filter_Tokens.OnResolveTimeTokenFromDateTimeFilter(Text,Time@,Boolean@)
commentId: O:Codeunit::System#Text#Filter Tokens
summary: Exposes functionality that allow users to specify pre-defined filter tokens that get converted to the correct values for various data types when filtering records.
name: '"Filter Tokens"'
uid: O:Codeunit::System#Text#Filter_Tokens
